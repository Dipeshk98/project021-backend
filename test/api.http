### Create get or create profile
# @name profile
GET http://localhost:4000/user/profile?email=test@example.com HTTP/1.1
content-type: application/json

### Create get or create profile with invalid email
GET http://localhost:4000/user/profile HTTP/1.1
content-type: application/json

### Not found page
GET http://localhost:4000/not-found HTTP/1.1
content-type: application/json

### Create new team
POST http://localhost:4000/team/create HTTP/1.1
content-type: application/json

{
  "userEmail": "test@example.com",
  "displayName": "team 1010"
}

### Delete team
@teamId = {{profile.response.body.$.teamList[0].id}}
DELETE http://localhost:4000/team/{{teamId}} HTTP/1.1
content-type: application/json

### Change team name with no displayName
PUT http://localhost:4000/team/01FXWZM30QRBS8K0DA55VVVREF/name HTTP/1.1
content-type: application/json

{
  "title": "new Hello world"
}

### Change team name with wrong teamId
PUT http://localhost:4000/team/01FXWZM30QRBS8K0DA55VVVREF/name HTTP/1.1
content-type: application/json

{
  "displayName": "team one"
}

### Change team name
@teamId = {{profile.response.body.$.teamList[0].id}}
PUT http://localhost:4000/team/{{teamId}}/name HTTP/1.1
content-type: application/json

{
  "displayName": "team one"
}

### List members with error, not team member
GET http://localhost:4000/team/01FXWZM30QRBS8K0DA55VVVREF/list-members HTTP/1.1

### List members in team
@teamId = {{profile.response.body.$.teamList[0].id}}
GET http://localhost:4000/team/{{teamId}}/list-members HTTP/1.1

### Create Todo with error, not team member
POST http://localhost:4000/01FXWZM30QRBS8K0DA55VVVREF/todo/create HTTP/1.1
content-type: application/json

{
  "title": "new Hello world"
}

### Create Todo
# @name todoCreation
@teamId = {{profile.response.body.$.teamList[0].id}}
POST http://localhost:4000/{{teamId}}/todo/create HTTP/1.1
content-type: application/json

{
  "title": "new Hello world"
}

### Create Todo with error, incorrect team ID
POST http://localhost:4000/01FX8KVHG514G6MZV87167G0Q02/todo/create HTTP/1.1
content-type: application/json

{
  "title": "new Hello world"
}

### Create Todo with error, `title` shouldn't be empty
@teamId = {{profile.response.body.$.teamList[0].id}}
POST http://localhost:4000/{{teamId}}/todo/create HTTP/1.1
content-type: application/json

{
  "title": ""
}

### Get Todo with error, with invalid ID
@teamId = {{profile.response.body.$.teamList[0].id}}
GET http://localhost:4000/{{teamId}}/todo/123 HTTP/1.1

### Get Todo
@id = {{todoCreation.response.body.$.id}}
@teamId = {{profile.response.body.$.teamList[0].id}}
GET http://localhost:4000/{{teamId}}/todo/{{id}} HTTP/1.1

### Update Todo with error, invalid ID
@teamId = {{profile.response.body.$.teamList[0].id}}
PUT http://localhost:4000/{{teamId}}/todo/123 HTTP/1.1
content-type: application/json

{
  "title": "Hello world 1000"
}

### Update Todo
@id = {{todoCreation.response.body.$.id}}
@teamId = {{profile.response.body.$.teamList[0].id}}
PUT http://localhost:4000/{{teamId}}/todo/{{id}} HTTP/1.1
content-type: application/json

{
  "title": "Hello world 1000"
}

### Delete Todo with invalid ID
@teamId = {{profile.response.body.$.teamList[0].id}}
DELETE http://localhost:4000/{{teamId}}/todo/123 HTTP/1.1

### Delete Todo
@id = {{todoCreation.response.body.$.id}}
@teamId = {{profile.response.body.$.teamList[0].id}}
DELETE http://localhost:4000/{{teamId}}/todo/{{id}} HTTP/1.1

### List Todo
@teamId = {{profile.response.body.$.teamList[0].id}}
GET http://localhost:4000/{{teamId}}/todo/list HTTP/1.1

### Get settings
@teamId = {{profile.response.body.$.teamList[0].id}}
GET http://localhost:4000/team/{{teamId}}/settings HTTP/1.1
content-type: application/json

### Stripe create session
@teamId = {{profile.response.body.$.teamList[0].id}}
POST http://localhost:4000/{{teamId}}/billing/create-checkout-session HTTP/1.1
content-type: application/json

{
  "priceId": "price_1KTXGwDxtHLZXYoxfKzwYezO"
}

### Stripe create session with invalid price
@teamId = {{profile.response.body.$.teamList[0].id}}
POST http://localhost:4000/{{teamId}}/billing/create-checkout-session HTTP/1.1
content-type: application/json

{
  "priceId": "price_1In575EK74ldPEzAusBLAt"
}

### Create Stripe customer portal link
@teamId = {{profile.response.body.$.teamList[0].id}}
POST http://localhost:4000/{{teamId}}/billing/customer-portal HTTP/1.1
content-type: application/json

### Update user email
PUT http://localhost:4000/user/email-update HTTP/1.1
content-type: application/json

{
  "email": "test@gmail.com"
}

### Team invite
@teamId = {{profile.response.body.$.teamList[0].id}}
POST http://localhost:4000/team/{{teamId}}/invite HTTP/1.1
content-type: application/json

{
  "email": "test3@gmail.com"
}

### Join team
# Warning: if you want to try the invite link from `ses-output` folder,
# please make sure the link is correctly formatted.
# In `ses-output` folder, you will find some unnecessary `equal` sign.
# They should be remove otherwise, the verification will be incorrect.
POST http://localhost:4000/team/01FYAPW4ATBDPE8ZR4BT6MC7NF/join/U-XdeixpkZuA72M0lhy_F HTTP/1.1
content-type: application/json

{
  "email": "test3@gmail.com"
}
