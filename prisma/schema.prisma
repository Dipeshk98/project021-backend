generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id
  email     String      @unique
  userGroups UserGroup[]
  documents documents[]
  i9Forms   I9Forms[]
  i9Section1Signed I9Section1[]
  i9Section1PreparerCreated I9Section1Preparer[]
  i9Section2Signed I9Section2[]
  i9DocumentsSigned I9Documents[]
  i9ReverificationSigned I9Reverification[]
  auditTrailPerformed AuditTrail[]
  initiationMetadataInitiated InitiationMetadata[]

  @@map("users")
}

model Group {
  id          String      @id @default(uuid())
  groupName   String      @unique
  userGroups  UserGroup[]
  groupRoles  GroupRole[]
  targetUsers TargetUser[]

  @@map("groups")
}

model Role {
  id            String          @id @default(uuid())
  roleName      String          @unique
  groupRoles    GroupRole[]
  rolePermissions RolePermission[]

  @@map("roles")
}

model Permission {
  id              String          @id @default(uuid())
  permissionName  String          
  access          String
  rolePermissions RolePermission[]

  @@map("permissions")
}

model UserGroup {
  userId    String
  groupId   String
  user      User    @relation(fields: [userId], references: [id])
  group     Group   @relation(fields: [groupId], references: [id])

  @@id([userId, groupId])
  @@map("user_groups")
}

model GroupRole {
  groupId   String
  roleId    String
  group     Group   @relation(fields: [groupId], references: [id])
  role      Role    @relation(fields: [roleId], references: [id])

  @@id([groupId, roleId])
  @@map("group_roles")
}

model RolePermission {
  roleId       String
  permissionId String
  role         Role       @relation(fields: [roleId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@id([roleId, permissionId])
  @@map("role_permissions")
}

model TargetUser {
  groupId     String
  targetUser  String  @unique
  group       Group   @relation(fields: [groupId], references: [id])

  @@map("target_users")
}

model I9Forms {
  form_id                String             @id @default(uuid())
  employee_id           String
  status               String             @db.VarChar(50)
  start_date           DateTime
  completion_date      DateTime?
  created_at           DateTime           @default(now())
  updated_at           DateTime           @updatedAt
  audit_trail          AuditTrail[]
  i9_documents         I9Documents[]
  i9_section1          I9Section1?
  i9_section2          I9Section2?
  i9_reverification    I9Reverification?
  initiation_metadata  InitiationMetadata[]
  user                 User               @relation(fields: [employee_id], references: [id])

  @@map("i9_forms")
}

model I9Section1 {
  section1_id                String    @id @default(uuid())
  form_id                   String    @unique
  first_name                String    @db.VarChar(100)
  last_name                 String    @db.VarChar(100)
  email                     String    @unique @db.VarChar(255)
  phone_number              String?   @db.VarChar(20)
  created_at                DateTime  @default(now())
  work_start_date           DateTime?
  address_apt               String?   @db.VarChar(50)
  address_street            String?   @db.VarChar(255)
  alien_registration_number String?   @db.VarChar(50)
  citizenship_status        String?   @db.VarChar(100)
  city                      String?   @db.VarChar(100)
  country_of_issuance       String?   @db.VarChar(100)
  date_of_birth             DateTime?
  employee_signature        String?
  foreign_passport_number   String?   @db.VarChar(50)
  i94_admission_number      String?   @db.VarChar(50)
  middle_initial            String?   @db.VarChar(10)
  other_last_names          String?   @db.VarChar(100)
  signed_date               DateTime?
  ssn                       String?   @unique @db.VarChar(11)
  state                     String?   @db.VarChar(100)
  uscis_a_number            String?   @db.VarChar(50)
  work_authorization_expiry DateTime?
  zip_code                  String?   @db.VarChar(20)
  signed_by                 String
  form                      I9Forms   @relation(fields: [form_id], references: [form_id])
  user                      User      @relation(fields: [signed_by], references: [id])
  preparers                 I9Section1Preparer[]

  @@map("i9_section1")
}

model I9Section1Preparer {
  preparer_id    String    @id @default(uuid())
  section1_id    String
  name           String    @db.VarChar(255)
  address        String    @db.VarChar(255)
  city           String    @db.VarChar(100)
  state          String    @db.VarChar(100)
  zip_code       String    @db.VarChar(20)
  signed_date    DateTime
  created_by     String
  section1       I9Section1 @relation(fields: [section1_id], references: [section1_id])
  user           User      @relation(fields: [created_by], references: [id])

  @@map("i9_section1_preparers")
}

model I9Section2 {
  section2_id              String    @id @default(uuid())
  form_id                 String    @unique
  document_a_type         String?   @db.VarChar(100)
  document_a_number       String?   @db.VarChar(100)
  document_a_expiration   DateTime?
  document_b_type         String?   @db.VarChar(100)
  document_b_number       String?   @db.VarChar(100)
  document_b_expiration   DateTime?
  document_c_type         String?   @db.VarChar(100)
  document_c_number       String?   @db.VarChar(100)
  document_c_expiration   DateTime?
  used_alt_procedure      Boolean?
  additional_info         String?   @db.Text
  first_day_employment    DateTime
  employer_name           String    @db.VarChar(255)
  employer_title          String    @db.VarChar(255)
  business_name           String    @db.VarChar(255)
  business_address        String    @db.VarChar(255)
  signed_by               String
  signed_date             DateTime
  form                    I9Forms   @relation(fields: [form_id], references: [form_id])
  user                    User      @relation(fields: [signed_by], references: [id])

  @@map("i9_section2")
}

model I9Documents {
  document_id       String    @id @default(uuid())
  form_id           String
  document_type     String    @db.VarChar(100)
  document_number   String?   @db.VarChar(100)
  document_expiry   DateTime?
  issuing_authority String    @db.VarChar(255)
  uploaded_file     String
  uploaded_at       DateTime  @default(now())
  document_title    String    @db.VarChar(255)
  signed_by         String
  form              I9Forms   @relation(fields: [form_id], references: [form_id])
  user              User      @relation(fields: [signed_by], references: [id])

  @@map("i9_documents")
}

model I9Reverification {
  reverification_id              String    @id @default(uuid())
  form_id                        String    @unique
  updated_at                     DateTime  @updatedAt
  additional_information         String?
  employer_name                  String    @db.VarChar(255)
  employer_signature             String
  employer_signed_date           DateTime
  new_first_name                 String?   @db.VarChar(100)
  new_last_name                  String?   @db.VarChar(100)
  new_middle_initial             String?   @db.VarChar(10)
  rehire_date                    DateTime?
  reverification_document_expiry DateTime?
  reverification_document_number String?   @db.VarChar(100)
  reverification_document_title  String?   @db.VarChar(100)
  used_dhs_alternative           Boolean?
  signed_by                      String
  form                           I9Forms   @relation(fields: [form_id], references: [form_id])
  user                           User      @relation(fields: [signed_by], references: [id])

  @@map("i9_reverification")
}

model AuditTrail {
  audit_id     String   @id @default(uuid())
  form_id      String
  action       String   @db.VarChar(50)
  performed_by String
  performed_at DateTime @default(now())
  section      String   @db.VarChar(50)
  ip_address   String   @db.VarChar(50)
  device_info  String   @db.VarChar(255)
  changes_json Json?
  form         I9Forms  @relation(fields: [form_id], references: [form_id])
  user         User     @relation(fields: [performed_by], references: [id])

  @@map("audit_trail")
}

model InitiationMetadata {
  initiation_id     String   @id @default(uuid())
  form_id           String
  initiated_by      String
  initiation_method String   @db.VarChar(50)
  tracking_code     String?  @db.VarChar(100)
  notes             String?  @db.Text
  created_at        DateTime @default(now())
  first_name        String   @db.VarChar(100)
  last_name         String   @db.VarChar(100)
  email             String   @db.VarChar(255)
  phone_no          String?  @db.VarChar(20)
  verification_type String   @db.VarChar(50)
  form              I9Forms  @relation(fields: [form_id], references: [form_id])
  user              User     @relation(fields: [initiated_by], references: [id])

  @@map("initiation_metadata")
}

model documents {
  id            Int       @id @default(autoincrement())
  user_id       String    @db.VarChar(50)
  file_id       String    @unique @db.VarChar(50)
  s3_path       String    @db.VarChar(255)
  document_type String?   @db.VarChar(100)
  details       Json?
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  users         User      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model passport_data {
  id                Int       @id @default(autoincrement())
  file_id           String    @unique @db.VarChar(50)
  s3_path           String    @db.VarChar(255)
  passport_number   String?   @db.VarChar(30)
  full_name         String?   @db.VarChar(100)
  surname           String?   @db.VarChar(100)
  given_names       String?   @db.VarChar(100)
  nationality       String?   @db.VarChar(50)
  date_of_birth     String?   @db.VarChar(20)
  place_of_birth    String?   @db.VarChar(100)
  gender            String?   @db.VarChar(10)
  issue_date        String?   @db.VarChar(20)
  expiry_date       String?   @db.VarChar(20)
  issuing_authority String?   @db.VarChar(100)
  mrz_data          String?
  confidence_score  Float?
  raw_text          String?
  created_at        DateTime? @default(now()) @db.Timestamp(6)
}

model NotificationLog {
  id              String   @id @default(uuid())
  sender_email    String   @db.VarChar(255)
  sender_name     String   @db.VarChar(255)
  recipient_email String   @db.VarChar(255)
  recipient_name  String   @db.VarChar(255)
  subject         String   @db.VarChar(255)
  message         String   @db.Text
  status          String   @db.VarChar(50)
  error_message   String?  @db.Text
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  @@map("notification_logs")
}
